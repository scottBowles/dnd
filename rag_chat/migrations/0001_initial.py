# Generated by Django 5.2.3 on 2025-07-26 23:19

import django.db.models.deletion
import pgvector.django.indexes
import pgvector.django.vector
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("nucleus", "0018_auto_20250726_2119"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="QueryCache",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "query_hash",
                    models.CharField(db_index=True, max_length=64, unique=True),
                ),
                (
                    "query_text",
                    models.TextField(help_text="Original query for debugging"),
                ),
                (
                    "response_data",
                    models.JSONField(help_text="Cached response, sources, etc."),
                ),
                ("tokens_saved", models.IntegerField(default=0)),
                (
                    "hit_count",
                    models.IntegerField(
                        default=0, help_text="How many times this cache was used"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When this cache entry expires"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Auto-generated from first message",
                        max_length=200,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(help_text="User's question/message")),
                ("response", models.TextField(help_text="RAG bot's response")),
                (
                    "sources",
                    models.JSONField(
                        default=list,
                        help_text="Citations and source links used in the response",
                    ),
                ),
                (
                    "tokens_used",
                    models.IntegerField(
                        default=0, help_text="OpenAI API tokens consumed"
                    ),
                ),
                (
                    "similarity_threshold",
                    models.FloatField(
                        default=0.7,
                        help_text="Minimum similarity score used for this query",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="rag_chat.chatsession",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="GameLogChunk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "chunk_text",
                    models.TextField(help_text="The actual text content of this chunk"),
                ),
                (
                    "chunk_index",
                    models.IntegerField(
                        help_text="Order of this chunk within the game log"
                    ),
                ),
                (
                    "embedding",
                    pgvector.django.vector.VectorField(
                        dimensions=1536,
                        help_text="OpenAI text-embedding-3-small vector",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict,
                        help_text="Additional context: session info, characters, places, etc.",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chunks",
                        to="nucleus.gamelog",
                    ),
                ),
            ],
            options={
                "ordering": ["game_log", "chunk_index"],
                "indexes": [
                    models.Index(
                        fields=["game_log"], name="rag_chat_ga_game_lo_9a8cf7_idx"
                    ),
                    models.Index(
                        fields=["chunk_index"], name="rag_chat_ga_chunk_i_63d944_idx"
                    ),
                    pgvector.django.indexes.HnswIndex(
                        ef_construction=64,
                        fields=["embedding"],
                        m=16,
                        name="chunk_embedding_hnsw_idx",
                        opclasses=["vector_cosine_ops"],
                    ),
                ],
                "unique_together": {("game_log", "chunk_index")},
            },
        ),
    ]
