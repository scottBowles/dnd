# Generated by Django 4.0.1 on 2022-01-26 03:00

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('item', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attack_bonus', models.IntegerField()),
                ('damage', models.CharField(max_length=100)),
                ('damage_type', models.CharField(default='', max_length=100)),
                ('range', models.PositiveIntegerField(default=0)),
                ('properties', models.TextField(default='')),
                ('ability_options', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('strength', 'Strength'), ('dexterity', 'Dexterity'), ('constitution', 'Constitution'), ('intelligence', 'Intelligence'), ('wisdom', 'Wisdom'), ('charisma', 'Charisma')], max_length=12), default=list, help_text="Comma separated ability scores. Usually 'strength' or 'dexterity'. With finesse: 'strength, dexterity'.", size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('equipment_options', models.TextField()),
                ('suggested_characteristics', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bond',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=500)),
                ('text', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hit_die', models.CharField(blank=True, choices=[('d4', 'd4'), ('d6', 'd6'), ('d8', 'd8'), ('d10', 'd10'), ('d12', 'd12'), ('d20', 'd20')], max_length=3, null=True)),
                ('strength', models.PositiveIntegerField(default=10)),
                ('dexterity', models.PositiveIntegerField(default=10)),
                ('constitution', models.PositiveIntegerField(default=10)),
                ('intelligence', models.PositiveIntegerField(default=10)),
                ('wisdom', models.PositiveIntegerField(default=10)),
                ('charisma', models.PositiveIntegerField(default=10)),
                ('copper_pieces', models.PositiveIntegerField(default=0)),
                ('silver_pieces', models.PositiveIntegerField(default=0)),
                ('electrum_pieces', models.PositiveIntegerField(default=0)),
                ('gold_pieces', models.PositiveIntegerField(default=0)),
                ('platinum_pieces', models.PositiveIntegerField(default=0)),
                ('max_hit_points', models.PositiveIntegerField(default=1)),
                ('temporary_hit_points', models.IntegerField(default=0)),
                ('damage_taken', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('player_name', models.CharField(blank=True, max_length=200, null=True)),
                ('alignment', models.CharField(blank=True, choices=[('LG', 'Lawful Good'), ('NG', 'Neutral Good'), ('CG', 'Chaotic Good'), ('LN', 'Lawful Neutral'), ('N', 'True Neutral'), ('CN', 'Chaotic Neutral'), ('LE', 'Lawful Evil'), ('NE', 'Neutral Evil'), ('CE', 'Chaotic Evil')], max_length=2, null=True)),
                ('experience_points', models.PositiveIntegerField(default=0)),
                ('armor_class', models.PositiveIntegerField(default=10, help_text='10 + dex mod + bonuses from armor, shields, spells, natural ac, class abilities, feats, magical items, etc.')),
                ('initiative', models.PositiveIntegerField(default=0, help_text="Equal to dex mod unless you have a feat or similar. If you're not sure, it's your dex mod.")),
                ('speed', models.PositiveIntegerField(default=0, help_text='Usually comes from your race')),
                ('num_hit_dice', models.PositiveIntegerField(default=1, help_text='Almost certainly the same as your character level')),
                ('death_save_successes', models.PositiveIntegerField(default=0)),
                ('death_save_failures', models.PositiveIntegerField(default=0)),
                ('inspiration', models.BooleanField(default=False)),
                ('passive_wisdom', models.PositiveIntegerField(default=10, help_text='10 + wisdom mod + bonuses (including perception proficiency bonus)')),
                ('passive_intelligence', models.PositiveIntegerField(default=10, help_text='10 + intelligence mod + bonuses (including investigation proficiency bonus)')),
                ('size', models.CharField(blank=True, choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large'), ('huge', 'Huge'), ('gargantuan', 'Gargantuan')], max_length=10, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hit_die', models.CharField(blank=True, choices=[('d4', 'd4'), ('d6', 'd6'), ('d8', 'd8'), ('d10', 'd10'), ('d12', 'd12'), ('d20', 'd20')], max_length=3, null=True)),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('description', models.TextField()),
                ('skill_number', models.PositiveIntegerField(default=0)),
                ('multiclass_skill_number', models.PositiveIntegerField(default=0)),
                ('equipment_choices', models.TextField()),
                ('major_saving_throw', models.CharField(choices=[('DEX', 'dexterity'), ('CON', 'constitution'), ('WIS', 'wisdom')], max_length=3)),
                ('minor_saving_throw', models.CharField(choices=[('STR', 'strength'), ('INT', 'intelligence'), ('CHA', 'charisma')], max_length=3)),
            ],
            options={
                'verbose_name_plural': 'character classes',
            },
        ),
        migrations.CreateModel(
            name='ClassAndLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'classes and levels',
            },
        ),
        migrations.CreateModel(
            name='Feat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('custom', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Flaw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=500)),
                ('text', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ideal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=500)),
                ('text', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalityTrait',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=500)),
                ('text', models.TextField(default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Proficiency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('proficiency_type', models.CharField(choices=[('armor', 'Armor'), ('weapon', 'Weapon'), ('skill', 'Skill'), ('tool', 'Tool'), ('language', 'Language'), ('ability', 'Ability'), ('other', 'Other')], default='other', max_length=8)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name_plural': 'Proficiencies',
            },
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('related_ability', models.CharField(choices=[('strength', 'Strength'), ('dexterity', 'Dexterity'), ('constitution', 'Constitution'), ('intelligence', 'Intelligence'), ('wisdom', 'Wisdom'), ('charisma', 'Charisma')], max_length=12)),
                ('custom', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryArmor',
            fields=[
                ('inventoryitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='character.inventoryitem')),
            ],
            bases=('character.inventoryitem',),
        ),
        migrations.CreateModel(
            name='InventoryEquipment',
            fields=[
                ('inventoryitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='character.inventoryitem')),
            ],
            bases=('character.inventoryitem',),
        ),
        migrations.CreateModel(
            name='InventoryTool',
            fields=[
                ('inventoryitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='character.inventoryitem')),
            ],
            bases=('character.inventoryitem',),
        ),
        migrations.CreateModel(
            name='InventoryWeapon',
            fields=[
                ('inventoryitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='character.inventoryitem')),
            ],
            bases=('character.inventoryitem',),
        ),
        migrations.AddConstraint(
            model_name='proficiency',
            constraint=models.UniqueConstraint(fields=('name', 'proficiency_type'), name='unique_proficiency'),
        ),
        migrations.AddField(
            model_name='personalitytrait',
            name='character',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='character.character'),
        ),
        migrations.AddField(
            model_name='language',
            name='script',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='character.script'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='character',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.character'),
        ),
        migrations.AddField(
            model_name='ideal',
            name='character',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='character.character'),
        ),
        migrations.AddField(
            model_name='flaw',
            name='character',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='character.character'),
        ),
        migrations.AddField(
            model_name='classandlevel',
            name='character',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.character'),
        ),
        migrations.AddField(
            model_name='classandlevel',
            name='character_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.characterclass'),
        ),
        migrations.AddField(
            model_name='characterclass',
            name='proficiencies',
            field=models.ManyToManyField(related_name='classes', to='character.Proficiency'),
        ),
        migrations.AddField(
            model_name='character',
            name='armor',
            field=models.ManyToManyField(blank=True, through='character.InventoryArmor', to='item.Armor'),
        ),
        migrations.AddField(
            model_name='character',
            name='background',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='character.background'),
        ),
        migrations.AddField(
            model_name='character',
            name='equipment',
            field=models.ManyToManyField(blank=True, through='character.InventoryEquipment', to='item.Equipment'),
        ),
        migrations.AddField(
            model_name='character',
            name='feats',
            field=models.ManyToManyField(blank=True, to='character.Feat'),
        ),
        migrations.AddField(
            model_name='character',
            name='features_and_traits',
            field=models.ManyToManyField(blank=True, related_name='characters', to='character.Feature'),
        ),
        migrations.AddField(
            model_name='character',
            name='proficiencies',
            field=models.ManyToManyField(blank=True, related_name='characters', to='character.Proficiency'),
        ),
    ]
